<?xml version="1.0" encoding="UTF-8"?>
<!-- xml -->


<!-- project -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">


    <!-- POM遵循版本 -->
    <modelVersion>4.0.0</modelVersion>


    <!-- parent -->
    <parent>


        <!-- org.springframework.boot-->
        <groupId>org.springframework.boot</groupId>


        <!-- spring-boot-starter-parent-->
        <artifactId>spring-boot-starter-parent</artifactId>


        <!-- version -->
        <version>2.1.8.RELEASE</version>


        <!-- 查找顺序：relativePath元素中的地址–本地仓库–远程仓库 -->
        <!-- 设定一个空值将始终从仓库中获取，不从本地路径获取 -->
        <relativePath/> <!-- lookup parent from repository -->
    </parent>


    <!-- java(source folders，蓝色文件夹)下-->
    <!-- springboot04是包名-->
    <!-- 定义了项目属于哪个组-->
    <!-- 如果你的公司是mycom，有一个项目为myapp，那么groupId就应该是com.mycom.myapp-->
    <groupId>com.feuoy</groupId>


    <!-- 定义了当前maven项目在组中唯一的ID-->
    <!-- 比如，myapp-util,myapp-domain,myapp-web等-->
    <artifactId>spring-boot-04-web-restfulcrud</artifactId>


    <!-- 指定了myapp项目的当前版本-->
    <!-- SNAPSHOT意为快照，说明该项目还处于开发中，是不稳定的版本。-->
    <version>0.0.1-SNAPSHOT</version>


    <!-- 声明了一个对于用户更为友好的项目名称-->
    <!-- 不是必须的，推荐为每个pom声明name，以方便信息交流。-->
    <name>spring-boot-04-web-restfulcrud</name>


    <!-- description -->
    <description>Demo project for Spring Boot</description>

    <!-- properties -->
    <properties>


        <!-- build.sourceEncoding-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>


        <!-- reporting.outputEncoding-->
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>


        <!-- java.version-->
        <java.version>1.8</java.version>


        <!-- 用下面这个会有版本冲突-->
        <!-- <thymeleaf.version>3.0.9.RELEASE</thymeleaf.version>-->


        <thymeleaf-spring5.version>3.0.9.RELEASE</thymeleaf-spring5.version>


        <!-- 布局功能的支持程序 -->
        <!-- thymeleaf3主程序，要layout2以上版本 -->
        <thymeleaf-layout-dialect.version>2.2.2</thymeleaf-layout-dialect.version>
    </properties>


    <!-- dependencies -->
    <dependencies>


        <!-- web启动器 -->
        <!-- dependency -->
        <dependency>

            <!-- groupId和artifactId -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>


            <!--引入web模块默认就是使用嵌入式的Tomcat作为Servlet容器；-->
            <!-- 排除tomcat依赖 -->
            <!--
			<exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
			-->
        </dependency>


        <!-- 引入其他的Servlet容器-->

        <!-- jetty-->
        <!--
		<dependency>
            <artifactId>spring-boot-starter-jetty</artifactId>
            <groupId>org.springframework.boot</groupId>
        </dependency>
		-->

        <!-- undertow-->
        <!--
		<dependency>
            <artifactId>spring-boot-starter-undertow</artifactId>
            <groupId>org.springframework.boot</groupId>
        </dependency>
		-->


        <!-- 引入jquery的webjars -->
        <!--在访问的时候只需要写webjars下面资源的名称即可-->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>jquery</artifactId>
            <version>3.3.1</version>
        </dependency>


        <!-- 引入bootstrap-->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap</artifactId>
            <version>4.0.0</version>
        </dependency>


        <!-- thymeleaf starter -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>


        <!-- test starter -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>


    <!-- build -->
    <build>
        <!-- 插件 -->
        <plugins>
            <!-- springboot中maven插件 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>


</project>
